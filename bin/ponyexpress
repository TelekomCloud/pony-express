#!/usr/bin/env python

# ponyexpress
import os
import sys
import json

sys.path.append(os.path.join(os.path.abspath(os.path.dirname(__file__)), '..'))

from flask.ext.script import Manager
from flask.ext.migrate import Migrate, MigrateCommand

from ponyexpress import create_app
from ponyexpress.database import db

from ponyexpress.api.lib.repositories import Repositories
from ponyexpress.api.lib.package_import import PackageImport

from ponyexpress.models.repository import Repository

##
# Create ponyexpress app object
##


if os.environ.get('PONY_DEVELOP'):
    envir = 'ponyexpress.config.configuration.DevelopmentConfig'
else:
    envir = 'ponyexpress.config.configuration.DefaultConfig'

app = create_app(envir)

manager = Manager(app)

migrate = Migrate(app, db)

manager.add_command('db', MigrateCommand)

@manager.command
def developermode():
    """Create a set of basic test data. Useful for testing"""

    with app.app_context():
        db.create_all()
        repositories = Repositories()

        repo = Repository()
        repo.provider = 'apt'
        repo.name = 'Test'
        repo.uri = 'http://de.archive.ubuntu.com/ubuntu/dists/precise/main/binary-amd64/Packages.gz'
        repo.label = 'Test'

        db.session.add(repo)
        db.session.commit()

        path = os.path.dirname(__file__)
        datafile = os.path.join(path, '../ponyexpress/tests/data/install_tiny.txt')

        json_data = open(datafile)
        data_install = json.load(json_data)
        json_data.close()

        test_importer = PackageImport()
        test_importer.process_node_info(data_install)

        repositories.select_provider(repo)
        repositories.update_repository(repo)

@manager.command
def import_repository(filename):
    """Import a predefined set of package repositories from a YAML file"""

    # load raw YAML repository configuration
    repoyaml = Repositories.load_config(filename)

    # add loaded repositories to the database
    with app.app_context():
        if repoyaml is not None:
            for repo in repoyaml:
                new_repo = Repository()
                new_repo.provider = repo['provider']
                new_repo.name = repo['name']
                new_repo.uri = repo['url']
                new_repo.label = repo['label']

                db.session.add(new_repo)
            db.session.commit()

            print("Imported %d repositories" % len(repoyaml))

if __name__ == "__main__":
    manager.run()
